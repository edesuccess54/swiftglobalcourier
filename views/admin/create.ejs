<%- include('./partials/header') %> 

    <main>
        <div class="mainWrapper">
            <%- include("./partials/sideBar") %> 
            <div class="rightContent">
                <%- include('./partials/topBar') %> 
                <div class="mainContent">
                    <div class="formContainer">
                        <form class="create-form" method="post" enctype="multipart/form-data">
                            <h2>Create Package</h2>
                            <div class="formWrapper">
                                <div class="inputGroup">
                                    <label for="sname">Sender's Name:</label>
                                    <input id="sname" type="text" name="senderName" title="senders name" >
                                </div>
    
                                <div class="inputGroup">
                                    <label for="semail">Sender's Email:</label>
                                    <input id="semail" type="text" name="senderEmail">
                                </div>
    
                                <div class="inputGroup">
                                    <label for="rname">Receiver's Name</label>
                                    <input id="rname" type="text" name="receiverName">
                                </div>
    
                                <div class="inputGroup">
                                    <label for="remail">Receiver's Email</label>
                                    <input id="remail" type="text" name="receiverEmail">
                                </div>

                                <div class="inputGroup">
                                    <label for="rnumber">Receiver's Number</label>
                                    <input id="rnumber" type="text" name="receiverNumber">
                                </div>
    
                                <div class="inputGroup">
                                    <label for="daddress">Destination Address</label>
                                    <input id="daddress" type="text" name="destination">
                                </div>

                                <div class="inputGroup">
                                    <label for="pack">package </label>
                                    <input id="pack" type="text" name="package" placeholder="what are you sending to client?">
                                </div>

                                <div class="inputGroup">
                                    <label for="weight">weight</label>
                                    <input id="weight" type="text" name="weight">
                                </div>

                                <div class="inputGroup">
                                    <label for="currentlocation">Current Location</label>
                                    <input id="currentlocation" type="text" name="currentLocation">
                                </div>

                                <div class="inputGroup">
                                    <label for="depatureDate">Depature Date</label>
                                    <input id="depatureDate" type="date" name="depatureDate">
                                </div>

                                <div class="inputGroup">
                                    <label for="deliveryDate">Expected Delivery Date</label>
                                    <input id="deliveryDate" type="date" name="deliveryDate">
                                </div>

                                <div class="inputGroup">
                                    <label for="shipmentMethod">Shipment Method</label>
                                    <select name="shipmentMethod" id="shipmentMethod">
                                        <option selected disabled>--select shipment method--</option>
                                        <option value="Express Delivery">Express Delivery</option>
                                    </select>
                                </div>

                                <div class="inputGroup">
                                    <label for="PickupDate">Pickup Date & time</label>
                                    <input id="PickupDate" type="date" name="pickupDate">
                                </div>

                                <div class="inputGroup">
                                    <label for="status">Status of item</label>
                                    <input id="status" type="text" name="status">
                                </div>


                                <div class="inputGroup">
                                    <label for="packageimg">upload package image</label>
                                    <input id="packageimg" type="file" name="image" >
                                </div>

                                <!-- <div class="inputGroup">
                                    
                                </div> -->

                                <button class="btn" type="submit">Create</button>
  
                        </div>
                         <div id="result" style="display: flex; gap:10px; flex-wrap: wrap; flex-grow: 1;"></div>
                    
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script type="module">
        import {notification, showSpinner, hideSpinner, closeNotification} from '/admin/js/notification.js';

        const createForm = document.querySelector('.create-form')
        const btn = document.querySelector('.btn')

        toastBtn.addEventListener('click', () => closeNotification(toast))

        // frondend image upload 
        const frontendImgUpload = async (e) => {
            if(window.File && window.FileReader && window.FileList && window.Blob) {
                const files = e.target.files;
                const result = document.querySelector('#result');

                for(let i = 0; i < files.length; i++) {
                    const picReader = new FileReader();
                    picReader.addEventListener('load', (event) => {
                        const picFile = event.target
                        const div = document.createElement('div')
                        div.innerHTML = `<img class="thumnail" style="height: 100px; object-fit: contain;" src="${picFile.result}" title="${picFile.name}" />`;
                        result.appendChild(div) 
                    })
                    picReader.readAsDataURL(files[i]);
                }

            } else {
                notification.error("Your browser does not support File Upload", toast, toastIcon, toastMessage, closeNotification)
                return
            }
            
        }
        
        const imgUpload = document.querySelector('#packageimg')
        imgUpload.addEventListener('change', (e) => frontendImgUpload(e))

        // function to create new package 
        const createpackage = async (e) => {
            e.preventDefault()

            showSpinner(btn)

            const senderName = createForm.senderName.value
            const senderEmail = createForm.senderEmail.value
            const receiverName = createForm.receiverName.value
            const receiverEmail = createForm.receiverEmail.value
            const receiverNumber = createForm.receiverNumber.value
            const destination = createForm.destination.value
            const packages = createForm.package.value
            const weight = createForm.weight.value
            const currentLocation = createForm.currentLocation.value
            const depatureDate = createForm.depatureDate.value
            const deliveryDate = createForm.deliveryDate.value
            const shipmentMethod = createForm.shipmentMethod.value
            const pickupDate = createForm.pickupDate.value
            const status = createForm.status.value

            console.log(packages)


            try {
                // validation
                if(!senderName || !senderEmail|| !receiverName|| !receiverEmail|| !receiverNumber|| !destination|| !packages|| !weight|| !currentLocation|| !depatureDate|| !deliveryDate|| !shipmentMethod|| !pickupDate||!status) {
                    throw new Error('All fields are required');
                }

                // const packages = {senderName,senderEmail,receiverName,receiverEmail,receiverNumber,destination,packages,weight,currentLocation,depatureDate,deliveryDate,shipmentMethod,pickupDate,status }

                const response = await fetch("/packages/", {
                    method: "POST",
                    // headers: {"Content-Type": "application/json"},
                    body: new FormData(createForm)
                });

                console.log(response)

                if(!response.ok) {
                    throw new Error(response.statusText);
                }

                const result = await response.json();

                if(result.error) {
                    throw new Error(result.error);
                }

                hideSpinner(btn, "Create")
                notification.success('package successfully created', toast, toastIcon, toastMessage, closeNotification);
                createForm.reset();

            } catch (error) {
                hideSpinner(btn, "Create")
                notification.error(error.message, toast, toastIcon, toastMessage, closeNotification);
                return;
            }
        }
        createForm.addEventListener('submit', createpackage);
    </script>

<%- include('./partials/footer') %> 
